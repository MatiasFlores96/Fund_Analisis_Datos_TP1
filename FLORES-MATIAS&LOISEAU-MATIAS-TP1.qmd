---
title: "TP1"
author: "Ing. Flores, Matias & Ing. Loiseau, Matias"
format: pdf
editor: visual
---

```{r, message=FALSE, warning=FALSE}
library(rstudioapi)
library(readxl)
library(ggplot2)

```

```{r}
# Fijamos ruta de trabajo
setwd(dirname(getActiveDocumentContext()$path))
```

```{r, message=FALSE, warning=FALSE}
Dieta <- read_excel("Dieta.xlsx")
attach(Dieta)
```

```{r}
Dieta
```

```{r, message=FALSE, warning=FALSE}
library(tidyverse)
```

```{r}
which(is.na(Dieta))

```

```{r}
which(is.na(Dieta))

```

```{r, message=FALSE, warning=FALSE}
Dieta <- drop_na(Dieta)
attach(Dieta)
```

## Medidas estadísticas descriptivas

Media

```{r}
mean(Grasas) 
```

Mediana

```{r}
median(Grasas)
```

Rango

```{r}
range(Grasas)
```

Desvío estándar

```{r}
sd(Grasas)
```

Cuartiles

```{r}
Q1 <- quantile(Grasas, probs = 0.25, type = 2) # primer cuartil de la longitud del pétalo
Q3 <- quantile(Grasas, probs = 0.75, type = 2) # tercer cuartil de la longitud del pétalo
IQR <- as.vector(Q3 - Q1) # rango intercuartil

Q1
Q3
IQR
```

```{r}
ggplot(Dieta, aes(x = Sexo, y = Calorías, fill = Sexo)) +
  geom_boxplot() +
  xlab("Sexo") +
  theme(legend.position = "none") 
```

```{r}
# Armamos los grupos

Moderada <- Dieta %>%
  filter(Calorías <= 1700)

Alta <- Dieta %>%
  filter(Calorías > 1700)
```
```{r}
# Armamos los grupos

Moderada 
Alta
```

```{r}
nSturges <- nclass.Sturges(Moderada$Alcohol) # método de Sturges
nSturges

nScott <- nclass.scott(Moderada$Alcohol) # método de Scott
nScott

nFD <- nclass.FD(Moderada$Alcohol) # método de Freedman-Diaconis
nFD
```


```{r}
ggplot(Moderada, aes(Alcohol)) +
  geom_histogram(bins=nSturges, color = "black", fill = "purple") +
  ylab("Frecuencia")

ggplot(Moderada, aes(Alcohol)) +
  geom_histogram(bins=nScott, color = "black", fill = "violet") +
  ylab("Frecuencia")

ggplot(Moderada, aes(Alcohol)) +
  geom_histogram(bins=nFD, color = "black", fill = "pink") +
  ylab("Frecuencia")
```
```{r}
nSturgesAlta <- nclass.Sturges(Alta$Alcohol) # método de Sturges
nSturgesAlta

nScottAlta <- nclass.scott(Alta$Alcohol) # método de Scott
nScottAlta

nFDAlta <- nclass.FD(Alta$Alcohol) # método de Freedman-Diaconis
nFDAlta
```
```{r}

ggplot(Alta, aes(Alcohol)) +
  geom_histogram(bins = nSturgesAlta, color = "black", fill = "purple") +
  ylab("Frecuencia")

ggplot(Alta, aes(Alcohol)) +
  geom_histogram(bins = nScottAlta, color = "black", fill = "violet") +
  ylab("Frecuencia")

ggplot(Alta, aes(Alcohol)) +
  geom_histogram(bins = nFDAlta, color = "black", fill = "pink") +
  ylab("Frecuencia")
```
```{r}
Dieta2 <- Dieta
```
```{r}
Dieta2 <- Dieta2 %>%
  mutate(Categoría = ifelse(Calorías <= 1700 , "Moderada", "Alta")) 
```
```{r}
Dieta2
```
```{r}
ggplot(Dieta2, aes(x = Categoría, y = Alcohol, fill = Categoría)) +
  geom_boxplot() +
  xlab("Categoría") +
  theme(legend.position = "none") 
```
```{r}
table(Dieta2$Categoría)
```

```{r, message=FALSE, warning=FALSE}
Sociodemograficos <- read_excel("Sociodemograficos.xlsx")
attach(Sociodemograficos)
```
```{r}
Sociodemograficos
```
#Cantidad de paises
```{r}
NROW(Sociodemograficos$País)
```
```{r}
Sociodemograficos$País[which.min(Sociodemograficos$`Tasa de natalidad`)]
```
```{r}
Sociodemograficos$País[which.max(Sociodemograficos$`Tasa de natalidad`)]
```
```{r}
# Scatterplot de las variables viento y temperatura
ggplot(Sociodemograficos, aes(x = `Tasa de natalidad`, y = `Tasa de mortalidad`)) +
  geom_point(col = "darkslategray3") +
  geom_text(aes(label=País), 
    hjust = -0.5, size = 2,
    position = position_dodge(width = 1))+
  xlab("nat") +
  ylab("mort")

```
```{r}
# Scatterplot de las variables viento y temperatura
ggplot(Sociodemograficos, aes(x = `Tasa de natalidad`, y = `Tasa de mortalidad`)) +
  geom_point(aes(colour = factor(País))) +
  xlab("nat") +
  ylab("mort")
```
PREGUNTAR EL MARTES

```{r}
summary(Sociodemograficos)
```

```{r}
# Debemos aplicarlo para variables numéricas
ggpairs(data = Sociodemograficos, columns = 2:9,
        diag = list(continuous = wrap("densityDiag", fill = "pink", color="violet")))
```

```{r}
data("swiss")
```
```{r}
help(swiss)
```


```{r}

```


## Distancia de Mahalanobis

```{r}
options(width = 80) # (mejora visual de la salida)

# Calculamos las distancias de Mahalanobis

DM <- mahalanobis(x = swiss , center = colMeans(swiss) , cov = cov(swiss))
DM
```

## Detección de outliers

```{r}
# Establecemos los puntos de corte usando la distribución chi cuadrado con 2 grados de libertad (cantidad de variables), para los distintos niveles de significación 

cutoff99 <- qchisq(p = 0.99 , df = 6)
cutoff95 <- qchisq(p = 0.95 , df = 6)
cutoff90 <- qchisq(p = 0.90 , df = 6)

cutoff99
cutoff95
cutoff90
```

```{r}
# Vemos los outliers detectados para el caso viento vs. temperatura

swiss[DM > cutoff99,]
swiss[DM > cutoff95,]
swiss[DM > cutoff90,]
```
```{r}
Localidad <- c
Asistencia <- c(11, 14, 7, 15, 11, 13, 11, 16, 10, 15, 18, 12, 9, 9, 10, 10, 15, 10, 14, 10, 10, 12, 14, 12, 15, 7, 13, 6, 10, 15, 20, 10, 13, 10, 6, 14, 8, 10, 8, 11, 13, 10, 12, 7, 5, 10, 10, 16, 9, 7, 7, 2, 6, 9, 9, 8, 8, 10, 3, 6, 5, 2, 9, 3, 4, 5, 10, 8, 5, 9, 10, 8, 13, 10, 0, 2, 1, 1, 0, 4, 6, 7, 3, 5, 9, 6, 1, 6, 0, 2, 5, 6, 11, 6, 7, 0, 5, 7, 5, 4, 7, 4, 2, 8, 9, 6, 1, 4, 7, 7, 8, 9, 7, 5, 1, 6, 9, 4, 7, 16)

Clases <- data.frame(Localidad, Asistencia)
Clases
```
```{r}
summary(Clases)
```
```{r}
attach(Clases)
```
```{r}
# Armamos los grupos

CiudadA <- Clases %>%
  filter(Localidad == "A")

CiudadB <- Clases %>%
  filter(Localidad == "B")

CiudadC <- Clases %>%
  filter(Localidad == "C")
```
```{r}
# Armamos los grupos

CiudadA
CiudadB
CiudadC
```
```{r}
summary(CiudadA)
```
```{r}
summary(CiudadB)

```
```{r}
summary(CiudadC)

```
```{r}
ggplot(Clases, aes(x = Localidad, y = Asistencia, fill = Localidad)) +
  geom_boxplot() +
  xlab("Localidad") +
  theme(legend.position = "none") 
```

