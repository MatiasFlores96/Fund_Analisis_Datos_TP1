---
title: "Trabajo Practico N°1"
author: "Ing. Flores, Matias & Ing. Loiseau, Matias"
format: pdf
editor: visual
---

```{r, message=FALSE, warning=FALSE}
library(rstudioapi)
library(readxl)
library(ggplot2)
library(tidyverse)
library(GGally)
library(ggthemes)
library(effectsize)
library(car)
library("nortest")

```

# Ejercicio N°1

## Punto 1

### Carga del Data Set

Para el primer ejercicio, cargamos el data set Dieta y lo analizamos.

```{r}
setwd(dirname(getActiveDocumentContext()$path))
```

```{r, message=FALSE, warning=FALSE}
Dieta <- read_excel("Dieta.xlsx")
attach(Dieta)
```

```{r}
Dieta
```

Podemos ver que el data set tiene 4 variables, Grasas, Alcohol, Calorías y Sexo.

### Análisis de Nulos

El primer punto nos pide analizar si existen datos faltantes. Utilizando la función is.na(), nos muestra el data set con True para valores faltantes y False para valores existentes, por lo que si utilizamos la función which() sobre esta, nos devuelve las posiciones donde se encuentran estos valores.

```{r}
which(is.na(Dieta))

```

### Eliminación de Nulos

Como no queremos tener los nulos en nuestro dataframe, los eliminamos y reemplazamos el dataframe con el nuevo sin ellos.

```{r, message=FALSE, warning=FALSE}
Dieta <- drop_na(Dieta)
attach(Dieta)
```

## Punto 2

Además del análisis de las medidas descriptivas de la variable Grasas, decidimos realizar también los cálculos sobre las otras variables.

### Media

```{r}
mean(Grasas) 
mean(Alcohol)
mean(Calorías)
```

### Mediana

```{r}
median(Grasas) 
median(Alcohol)
median(Calorías)
```

### Rango

```{r}
range(Grasas)
range(Alcohol)
range(Calorías)
```

### Desvío Estándar

```{r}
sd(Grasas)
sd(Alcohol)
sd(Calorías)
```

### Rango Intercuartil

```{r}
Q1G <- quantile(Grasas, probs = 0.25, type = 2) 
Q3G <- quantile(Grasas, probs = 0.75, type = 2) 
IQRG <- as.vector(Q3G - Q1G)
Q1A <- quantile(Alcohol, probs = 0.25, type = 2) 
Q3A <- quantile(Alcohol, probs = 0.75, type = 2) 
IQRA <- as.vector(Q3A - Q1A)
Q1C <- quantile(Calorías, probs = 0.25, type = 2) 
Q3C <- quantile(Calorías, probs = 0.75, type = 2) 
IQRC <- as.vector(Q3C - Q1C)

IQRG
IQRA
IQRC
```

## Punto 3

### Gráfico Boxplot

```{r}

Masculino <- Dieta %>%
  filter(Sexo == 'M')

Femenino <- Dieta %>%
  filter(Sexo == 'F')
```

```{r}
summary(Masculino)
summary(Femenino)
```

```{r}
bp <- ggplot(Dieta, aes(x = Sexo, y = Calorías, fill=Sexo, add = TRUE)) +
  geom_boxplot() +
  labs(
    title = "Consumo de Calorías en Función del Sexo",
    x = "Sexo",
    y = "Calorías"
  ) +
  theme_classic() +
  theme(
    plot.title = element_text(color = "black", size = 16, face = "bold", hjust = 0.5),
    panel.grid.major = element_line(color = "#6C7B8B",
                                  linewidth = 0.1,
                                  linetype = 8))

bp + scale_fill_manual(values=c("deepskyblue3", "deepskyblue4")) 

```

## Punto 4

Dividimos en dos data frames para poder analizar cada categoría en detalle.

```{r}

Moderada <- Dieta %>%
  filter(Calorías <= 1700)

Alta <- Dieta %>%
  filter(Calorías > 1700)
```

```{r}
Moderada 
Alta
```

```{r}
summary(Moderada)
summary(Alta)
```

### Histograma de Cada Categoría

Realizamos los cálculos de los bins para poder graficar un histograma con mayor precisión. Para esto, implementamos 3 métodos distintos, y probaremos los 3 para ambos gráficos.

```{r}
nSturges <- nclass.Sturges(Moderada$Alcohol)
nSturges

nScott <- nclass.scott(Moderada$Alcohol)
nScott

nFD <- nclass.FD(Moderada$Alcohol)
nFD
```

```{r}
ggplot(Moderada, aes(Alcohol)) + 
  geom_histogram(bins=nSturges, color = "black", fill = "deepskyblue3") +
  labs(
    title = "Histograma de Alcohol según Categoría Moderada",
    x = "Alcohol",
    y = "Frecuencia") +   
  theme_classic() +
  theme(
    plot.title = element_text(color = "black", size = 16, face = "bold", hjust = 0.5),
    panel.grid.major = element_line(color = "#6C7B8B",linewidth = 0.1,linetype = 8))

ggplot(Moderada, aes(Alcohol)) +
  geom_histogram(bins=nScott, color = "black", fill = "deepskyblue3") +
  labs(
    title = "Histograma de Alcohol según Categoría Moderada",
    x = "Alcohol",
    y = "Frecuencia") +   
  theme_classic() +
  theme(
    plot.title = element_text(color = "black", size = 16, face = "bold", hjust = 0.5),
    panel.grid.major = element_line(color = "#6C7B8B",linewidth = 0.1,linetype = 8))

ggplot(Moderada, aes(Alcohol)) +
  geom_histogram(bins=nFD, color = "black", fill = "deepskyblue3") +
  labs(
    title = "Histograma de Alcohol según Categoría Moderada",
    x = "Alcohol",
    y = "Frecuencia") +   
  theme_classic() +
  theme(
    plot.title = element_text(color = "black", size = 16, face = "bold", hjust = 0.5),
    panel.grid.major = element_line(color = "#6C7B8B",linewidth = 0.1,linetype = 8))
```

```{r}
nSturgesAlta <- nclass.Sturges(Alta$Alcohol) # método de Sturges
nSturgesAlta

nScottAlta <- nclass.scott(Alta$Alcohol) # método de Scott
nScottAlta

nFDAlta <- nclass.FD(Alta$Alcohol) # método de Freedman-Diaconis
nFDAlta
```

```{r}

ggplot(Alta, aes(Alcohol)) +
  geom_histogram(bins = nSturgesAlta, color = "black", fill = "deepskyblue4") +
  labs(
    title = "Histograma de Alcohol según Categoría Alta",
    x = "Alcohol",
    y = "Frecuencia") +   
  theme_classic() +
  theme(
    plot.title = element_text(color = "black", size = 16, face = "bold", hjust = 0.5),
    panel.grid.major = element_line(color = "#6C7B8B",linewidth = 0.1,linetype = 8))

ggplot(Alta, aes(Alcohol)) +
  geom_histogram(bins = nScottAlta, color = "black", fill = "deepskyblue4") +
  labs(
    title = "Histograma de Alcohol según Categoría Alta",
    x = "Alcohol",
    y = "Frecuencia") +   
  theme_classic() +
  theme(
    plot.title = element_text(color = "black", size = 16, face = "bold", hjust = 0.5),
    panel.grid.major = element_line(color = "#6C7B8B",linewidth = 0.1,linetype = 8))

ggplot(Alta, aes(Alcohol)) +
  geom_histogram(bins = nFDAlta, color = "black", fill = "deepskyblue4") +
  labs(
    title = "Histograma de Alcohol según Categoría Alta",
    x = "Alcohol",
    y = "Frecuencia") +   
  theme_classic() +
  theme(
    plot.title = element_text(color = "black", size = 16, face = "bold", hjust = 0.5),
    panel.grid.major = element_line(color = "#6C7B8B",linewidth = 0.1,linetype = 8))
```

```{r}
Dieta <- Dieta %>%
  mutate(Categoría = ifelse(Calorías <= 1700 , "Moderada", "Alta")) 
```

```{r message=FALSE, warning=FALSE}
Dieta
attach(Dieta)
```

### Boxplot de Consumo de Alcohol

```{r}
bp <- ggplot(Dieta, aes(x = Categoría, y = Alcohol, fill=Categoría, add = TRUE)) +
  geom_boxplot() +
  labs(
    title = "Consumo de Alcohol en base a Categoría",
    x = "Categoría",
    y = "Alcohol"
  ) +
  theme_classic() +
  theme(
    plot.title = element_text(color = "black", size = 16, face = "bold", hjust = 0.5),
    panel.grid.major = element_line(color = "#6C7B8B",
                                  linewidth = 0.1,
                                  linetype = 8))

bp + scale_fill_manual(values=c("deepskyblue3", "deepskyblue4")) 
```

```{r}
table(Dieta$Categoría)
```

# Ejercicio N°2

## Punto 1

### Carga del Data Set

```{r, message=FALSE, warning=FALSE}
Sociodemograficos <- read_excel("Sociodemograficos.xlsx")
attach(Sociodemograficos)
```

```{r}
Sociodemograficos
```

### Cantidad de Países

```{r}
NROW(Sociodemograficos$País)
```

## Punto 2

### País con Menor Tasa de Natalidad

```{r}
Sociodemograficos$País[which.min(Sociodemograficos$`Tasa de natalidad`)]
```

### País con Mayor Tasa de Natalidad

```{r}
Sociodemograficos$País[which.max(Sociodemograficos$`Tasa de natalidad`)]
```

## Punto 3

### Diagrama de Dispersión de los Países

Realizamos un gráfico de dispersión para comparar las variables de tasa de natalidad con la de tasa de mortalidad.

```{r}
ggplot(Sociodemograficos, aes(x = `Tasa de natalidad`, y = `Tasa de mortalidad infantil`)) +
  geom_point(col = "deepskyblue4", size=1.5) +
  labs(
    title = "Diagrama de Dispersión entre Tasa de Natalidad y Mortalidad Infantil",
    x = "Natalidad",
    y = "Mortalidad Infantil")+
  theme_classic() +
  theme(
    plot.title = element_text(color = "black", size = 12, face = "bold", hjust = 0.5),
    panel.grid.major = element_line(color = "#6C7B8B",
                                    linewidth = 0.1,
                                    linetype = 8))
```

```{r}
cor.test(`Tasa de natalidad`,`Tasa de mortalidad infantil`)
```

## Punto 4

### Vector de Medias y Medianas

```{r}
summary(Sociodemograficos)
```

## Punto 5

### Matrices de Covarianzas y Correlaciones

```{r}
cov(Sociodemograficos[2:9])
```

```{r}
gg=ggpairs(data = Sociodemograficos, columns = 2:9,
        diag = list(continuous = wrap("densityDiag", fill = "dodgerblue2", color="black")),
        upper = list(continuous = wrap("cor", color = "dodgerblue2")),
        lower = list(continuous = wrap("points" , fill = "black",color = "dodgerblue2")))

print(gg, progress = F)  # no progress bar

```

# Ejercicio N°3

## Punto 1

### Análisis del Data Set

```{r}
data("swiss")
```

```{r}
help(swiss)
```

## Punto 2

```{r}
gg=ggpairs(data = swiss,
        diag = list(continuous = wrap("densityDiag", fill = "dodgerblue2", color="black")),
        upper = list(continuous = wrap("cor", color = "dodgerblue2")),
        lower = list(continuous = wrap("points" , fill = "black",color = "dodgerblue2")))

print(gg, progress = F) 
```

## Punto 3

### Distancia de Mahalanobis

```{r}
options(width = 80)

DM <- mahalanobis(x = swiss , center = colMeans(swiss) , cov = cov(swiss))
DM
```

```{r}

cutoff99 <- qchisq(p = 0.99 , df = 6)
cutoff95 <- qchisq(p = 0.95 , df = 6)
cutoff90 <- qchisq(p = 0.90 , df = 6)

cutoff99
cutoff95
cutoff90
```

```{r}

swiss[DM > cutoff99,]
swiss[DM > cutoff95,]
swiss[DM > cutoff90,]
```

# Ejercicio N°4

## Punto 1

### Creación del Data Frame

```{r}
Localidad <- c
Asistencia <- c(11, 14, 7, 15, 11, 13, 11, 16, 10, 15, 18, 12, 9, 9, 10, 10, 15, 10, 14, 10, 10, 12, 14, 12, 15, 7, 13, 6, 10, 15, 20, 10, 13, 10, 6, 14, 8, 10, 8, 11, 13, 10, 12, 7, 5, 10, 10, 16, 9, 7, 7, 2, 6, 9, 9, 8, 8, 10, 3, 6, 5, 2, 9, 3, 4, 5, 10, 8, 5, 9, 10, 8, 13, 10, 0, 2, 1, 1, 0, 4, 6, 7, 3, 5, 9, 6, 1, 6, 0, 2, 5, 6, 11, 6, 7, 0, 5, 7, 5, 4, 7, 4, 2, 8, 9, 6, 1, 4, 7, 7, 8, 9, 7, 5, 1, 6, 9, 4, 7, 16)

Clases <- data.frame(Localidad, Asistencia)
Clases
```

## Punto 2

### Análisis del Data Frame

```{r}
summary(Clases)
```

```{r, message=FALSE, warning=FALSE}
attach(Clases)
```

```{r}

CiudadA <- Clases %>%
  filter(Localidad == "A")

CiudadB <- Clases %>%
  filter(Localidad == "B")

CiudadC <- Clases %>%
  filter(Localidad == "C")

```

```{r}

CiudadA
CiudadB
CiudadC
```

```{r}
summary(CiudadA)
```

```{r}
summary(CiudadB)

```

```{r}
summary(CiudadC)
```

```{r}
sd(CiudadA$Asistencia)
```

```{r}
sd(CiudadB$Asistencia)
```

```{r}
sd(CiudadC$Asistencia)
```

```{r}
sd(Clases$Asistencia)
```

```{r}
bp <- ggplot(Clases, aes(x = Localidad, y = Asistencia, fill=Localidad, add = TRUE)) +
  geom_boxplot() +
  labs(
    title = "Asistencia según Localidad",
    x = "Localidad",
    y = "Asistencia"
  ) +
  theme_classic() +
  theme(
    plot.title = element_text(color = "black", size = 16, face = "bold", hjust = 0.5),
    panel.grid.major = element_line(color = "#6C7B8B",
                                  linewidth = 0.1,
                                  linetype = 8))

bp + scale_fill_manual(values=c("deepskyblue2","deepskyblue3","deepskyblue4"))
```

## Punto 3

### Análisis de Normalidad

```{r}
library("nortest")

qqPlot(x = Asistencia, col = "dodgerblue4", col.lines = "deepskyblue", pch = 16, 
       id = FALSE,
       main = "QQPlot de Asistencia",
       xlab = "Cuantiles de la distribución Normal estándar",
       ylab = "Cuantiles de la Asistencia")

lillie.test(Asistencia)

```

```         
Al realizar el test de Lilliefors, nos dio un p-value menor al nivel de significancia, por lo cual determinamos que el conjunto no sigue una distribución normal.
```

### Análisis de Homocedasticidad

```{r}
leveneTest(data = Clases,
           y = Asistencia,
           group = Localidad)

```

```         
Nos dio 0.15 por ende no rechazamos la hipótesis nula que supone la igualdad de las varianzas en los grupos.
```

### Test de ANOVA

```{r}
aov_clase <- aov(formula = Asistencia ~ Localidad,
    data = Clases)

summary(aov_clase)
```

```         
El P-Value obtenido es más bajo que el corte usual de 0.05
```

### Test de Chi

```{r}
eta_squared(aov_clase)$Eta2
```

```         
El tamaño del efecto nos dio mayor que el nivel de clasificación de 0.14, por lo tanto deducimos que la varianza de la asistencia se encuentra explicada en gran medida por el tipo de ciudad en la que se encuentra.
```

## Punto 4

### Test de Tukey

```{r}
TukeyHSD(aov_clase)
```

```         
A partir de los resultados obtenidos, podemos concluir que existen diferencias estadísticamente significativas en las medias de las asistencias entre las ciudades A-B y A-C, donde los valores del P-Value son menores a 0.05.
```
